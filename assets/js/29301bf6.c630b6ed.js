"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7196],{7673:(r,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>e,toc:()=>p});const e=JSON.parse('{"id":"Development Core/GDdocs/data/arr","title":"arr","description":"","source":"@site/docs/02_Development Core/GDdocs/data/arr.md","sourceDirName":"02_Development Core/GDdocs/data","slug":"/Development Core/GDdocs/data/arr","permalink":"/ecosys.documents/docs/Development Core/GDdocs/data/arr","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"crypto","permalink":"/ecosys.documents/docs/Development Core/GDdocs/crypto"},"next":{"title":"str","permalink":"/ecosys.documents/docs/Development Core/GDdocs/data/str"}}');var s=t(4848),a=t(8453);const i={},o=void 0,c={},p=[];function l(r){const n={code:"code",pre:"pre",...(0,a.R)(),...r.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'+----------------------------------------------------------------------------------------------------------------------------------------------------+\r\n|                                                       GODOT STRING & ARRAY CHEATSHEET                                                             |\r\n+----------------------------------------------------------------------------------------------------------------------------------------------------+\r\n| [STRING - 1] KH\u1edeI T\u1ea0O                | [STRING - 2] KI\u1ec2M TRA                      | [ARRAY - 1] KH\u1edeI T\u1ea0O                                           |\r\n|--------------------------------------|--------------------------------------------|----------------------------------------------------------------|\r\n| String(123)      \u2192 int               | s.begins_with(x)     \u2192 b\u1eaft \u0111\u1ea7u?            | var arr = ["Mot", 2, 3]                                       |\r\n| String(3.14)     \u2192 float             | s.ends_with(x)       \u2192 k\u1ebft th\xfac?           | Pool Arrays: PoolColor/Vector2/Vector3/String/Real/Int/Byte   |\r\n| String([a,b])    \u2192 array             | s.empty()            \u2192 r\u1ed7ng?               |                                                                |\r\n| String({a:1})    \u2192 dict              | s.is_abs_path()      \u2192 tuy\u1ec7t \u0111\u1ed1i           |                                                                |\r\n|                                      | s.is_rel_path()      \u2192 t\u01b0\u01a1ng \u0111\u1ed1i           |                                                                |\r\n|                                      | s.is_valid_filename()                      |                                                                |\r\n|                                      | s.is_valid_float/int/hex/html/ip           |                                                                |\r\n|                                      | s.is_valid_identifier()                    |                                                                |\r\n+--------------------------------------+--------------------------------------------+----------------------------------------------------------------+\r\n| [STRING - 3] T\xc1CH & GH\xc9P             | [STRING - 4] T\xccM & THAY TH\u1ebe                | [ARRAY - 2] TH\xcaM & G\u1ed8P                                         |\r\n|--------------------------------------|--------------------------------------------|----------------------------------------------------------------|\r\n| s.split(",")     \u2192 m\u1ea3ng \',\'          | s.find(x) / find_last(x)                   | arr.append(x)       \u2192 th\xeam cu\u1ed1i                               |\r\n| s.rsplit(",",1)  \u2192 t\xe1ch t\u1eeb ph\u1ea3i      | s.findn(x)             \u2192 no case           | arr.append_array(b)  \u2192 g\u1ed9p m\u1ea3ng                                |\r\n| s.split_floats() \u2192 m\u1ea3ng s\u1ed1 th\u1ef1c      | s.rfind(x)             \u2192 t\xecm ng\u01b0\u1ee3c         | arr.push_back(x)    \u2192 th\xeam cu\u1ed1i                               |\r\n| ", ".join(arr)   \u2192 n\u1ed1i m\u1ea3ng          | s.replace(a,b)                             | arr.push_front(x)   \u2192 th\xeam \u0111\u1ea7u                                |\r\n| s.get_slice(i)   \u2192 ph\u1ea7n t\u1eed i         | s.replacen(a,b)        \u2192 no case           | arr.insert(i, x)    \u2192 ch\xe8n t\u1ea1i v\u1ecb tr\xed                          |\r\n|                                      | s.count(x) / countn(x)                     |                                                                |\r\n+--------------------------------------+--------------------------------------------+----------------------------------------------------------------+\r\n| [STRING - 5] CH\u1ec8NH S\u1eecA               | [STRING - 6] M\xc3 H\xd3A / GI\u1ea2I M\xc3              | [ARRAY - 3] X\xd3A & CH\u1ec8NH S\u1eecA                                    |\r\n|--------------------------------------|--------------------------------------------|----------------------------------------------------------------|\r\n| s.erase(pos,len)   \u2192 x\xf3a             | s.c_escape() / c_unescape()                | arr.erase(x)   \u2192 x\xf3a gi\xe1 tr\u1ecb                                   |\r\n| s.insert(pos,str)  \u2192 ch\xe8n            | s.http_escape()/http_unescape()            | arr.remove(i)  \u2192 x\xf3a t\u1ea1i index                                 |\r\n| s.left(n)/right(n) \u2192 l\u1ea5y n k\xfd t\u1ef1     | s.json_escape()                            | arr.clear()    \u2192 x\xf3a to\xe0n b\u1ed9                                   |\r\n| s.substr(pos,len)  \u2192 substring       | s.xml_escape()                             | arr.fill(v)    \u2192 g\xe1n to\xe0n b\u1ed9 = v                               |\r\n| s.capitalize()     \u2192 vi\u1ebft hoa \u0111\u1ea7u    | s.percent_encode/decode()                  | arr.resize(n)  \u2192 \u0111\u1ed5i k\xedch th\u01b0\u1edbc                                |\r\n| to_lower()/upper()                   | s.md5/sha1/sha256_text()                   |                                                                |\r\n| strip_edges()/lstrip()/rstrip()      |                                            |                                                                |\r\n| strip_escapes()                      |                                            |                                                                |\r\n| trim_prefix()/trim_suffix()          |                                            |                                                                |\r\n| s.repeat(n)        \u2192 l\u1eb7p n l\u1ea7n       |                                            |                                                                |\r\n+--------------------------------------+--------------------------------------------+----------------------------------------------------------------+\r\n| [STRING - 7] \u0110\u01af\u1edcNG D\u1eaaN               | [STRING - 8] SO S\xc1NH & T\u01af\u01a0NG \u0110\u1ed2NG          | [ARRAY - 4] TRUY C\u1eacP & KI\u1ec2M TRA                                |\r\n|--------------------------------------|--------------------------------------------|----------------------------------------------------------------|\r\n| s.get_base_dir()   \u2192 th\u01b0 m\u1ee5c         | s.nocasecmp_to(t)   \u2192 so s\xe1nh no hoa       | arr.front()    \u2192 ph\u1ea7n t\u1eed \u0111\u1ea7u                                   |\r\n| s.get_file()       \u2192 t\xean file        | s.casecmp_to(t)     \u2192 ph\xe2n bi\u1ec7t hoa        | arr.back()     \u2192 ph\u1ea7n t\u1eed cu\u1ed1i                                  |\r\n| s.get_basename()   \u2192 t\xean kh\xf4ng \u0111u\xf4i  | s.naturalnocasecmp_to(t) \u2192 t\u1ef1 nhi\xean        | arr.has(x)     \u2192 c\xf3 ch\u1ee9a x?                                    |\r\n| s.get_extension()  \u2192 .png            | s.similarity(t)     \u2192 \u0111\u1ed9 gi\u1ed1ng 0\u20131         | arr.empty()    \u2192 r\u1ed7ng?                                         |\r\n| s.plus_file("f.gd")\u2192 n\u1ed1i             | s.is_subsequence_of(t)                     | arr.size()     \u2192 s\u1ed1 ph\u1ea7n t\u1eed                                    |\r\n| s.simplify_path()  \u2192 g\u1ecdn             | s.is_subsequence_ofi(t) \u2192 no hoa           | arr.find(x)    \u2192 t\xecm t\u1eeb \u0111\u1ea7u                                    |\r\n|                                      |                                            | arr.find_last(x)\u2192 t\xecm t\u1eeb cu\u1ed1i                                  |\r\n|                                      |                                            | arr.rfind(x)   \u2192 t\xecm ng\u01b0\u1ee3c                                     |\r\n+--------------------------------------+--------------------------------------------+----------------------------------------------------------------+\r\n| [STRING - 9] CHUY\u1ec2N KI\u1ec2U             | [STRING - 10] \u0110\u1ecaNH D\u1ea0NG & K\xcdCH TH\u01af\u1edaC       | [ARRAY - 5] S\u1eaeP X\u1ebeP & T\xccM KI\u1ebeM                                  |\r\n|--------------------------------------|--------------------------------------------|----------------------------------------------------------------|\r\n| "123".to_int()     \u2192 int             | "{0} la {1}".format([a,b]) \u2192 thay th\u1ebf      | arr.sort()           \u2192 s\u1eafp x\u1ebfp t\u0103ng                           |\r\n| "12.3".to_float()  \u2192 float           | "123".pad_zeros(5) \u2192 "00123"               | arr.bsearch(x)       \u2192 t\xecm v\u1ecb tr\xed ch\xe8n                         |\r\n| "0xff".hex_to_int()\u2192 hex\u2192int         | "12.3".pad_decimals(4) \u2192 "12.3000"         | arr.sort_custom(o,f) \u2192 s\u1eafp x\u1ebfp t\xf9y ch\u1ec9nh                       |\r\n| s.ord_at(i)        \u2192 ASCII           | String.humanize_size(bytes) \u2192 "1.2 MB"     | arr.bsearch_custom(x,o,f) \u2192 t\xecm t\xf9y ch\u1ec9nh                      |\r\n| s.to_ascii()/utf8()/wchar()          | s.indent("> ") \u2192 th\xeam ti\u1ec1n t\u1ed1              |                                                                |\r\n+--------------------------------------+--------------------------------------------+----------------------------------------------------------------+\r\n| [STRING - 11] REGEX & BIGRAM         | [STRING - 12] KH\xc1C                         | [ARRAY - 6] L\u1ea4Y & X\xd3A PH\u1ea6N T\u1eec                                   |\r\n|--------------------------------------|--------------------------------------------|----------------------------------------------------------------|\r\n| s.match("Xi*ao")   \u2192 regex \u0111\u01a1n gi\u1ea3n  | s.length()  \u2192 \u0111\u1ed9 d\xe0i                       | arr.pop_front() \u2192 l\u1ea5y+x\xf3a \u0111\u1ea7u                                  |\r\n| s.matchn("XI*AO")  \u2192 no hoa          | s.hash()    \u2192 m\xe3 hash s\u1ed1                   | arr.pop_back()  \u2192 l\u1ea5y+x\xf3a cu\u1ed1i                                 |\r\n| s.bigrams()        \u2192 c\u1eb7p k\xfd t\u1ef1       |                                            | arr.pop_at(i)   \u2192 l\u1ea5y+x\xf3a t\u1ea1i i                                |\r\n+--------------------------------------+--------------------------------------------+----------------------------------------------------------------+\r\n| [ARRAY - 7] KH\xc1C                                                                                                                                |\r\n|------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| arr.invert() \u2192 \u0111\u1ea3o ng\u01b0\u1ee3c | arr.pick_random() \u2192 ch\u1ecdn ng\u1eabu nhi\xean | arr.max()/min() \u2192 l\u1edbn nh\u1ea5t/nh\u1ecf nh\u1ea5t | arr.shuffle() \u2192 x\xe1o tr\u1ed9n | \r\n| arr.count(x) \u2192 \u0111\u1ebfm s\u1ed1 l\u1ea7n | arr.hash() \u2192 m\xe3 hash | arr.slice(a,b) \u2192 c\u1eaft [a..b] | arr.duplicate() \u2192 copy | arr.duplicate(true) \u2192 deep copy |\r\n+------------------------------------------------------------------------------------------------------------------------------------------------+\r\n\n'})})}function h(r={}){const{wrapper:n}={...(0,a.R)(),...r.components};return n?(0,s.jsx)(n,{...r,children:(0,s.jsx)(l,{...r})}):l(r)}},8453:(r,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var e=t(6540);const s={},a=e.createContext(s);function i(r){const n=e.useContext(a);return e.useMemo(function(){return"function"==typeof r?r(n):{...n,...r}},[n,r])}function o(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(s):r.components||s:i(r.components),e.createElement(a.Provider,{value:n},r.children)}}}]);