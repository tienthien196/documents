"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3233],{3472:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>a,frontMatter:()=>_,metadata:()=>E,toc:()=>c});const E=JSON.parse('{"id":"GDdocs/sys/performance","title":"performance","description":"","source":"@site/docs/GDdocs/sys/performance.md","sourceDirName":"GDdocs/sys","slug":"/GDdocs/sys/performance","permalink":"/documents/docs/GDdocs/sys/performance","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"os","permalink":"/documents/docs/GDdocs/sys/os"},"next":{"title":"res","permalink":"/documents/docs/GDdocs/sys/res"}}');var t=r(4848),o=r(8453);const _={},i=void 0,s={},c=[];function R(n){const e={code:"code",pre:"pre",...(0,o.R)(),...n.components};return(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'+----------------------------------------------------------------------------------------------------------------------------------------+\r\n|                                         GODOT ENGINE + PERFORMANCE CHEATSHEET (v3.6)                                                  |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\r\n| [ENGINE - SETTINGS] C\xc0I \u0110\u1eb6T ENGINE        | [ENGINE - TIME & FPS] TH\u1edcI GIAN & KHUNG H\xccNH           | [ENGINE - INFO] TH\xd4NG TIN         |\r\n|-------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| Engine.editor_hint          \u2192 editor mode?| Engine.get_frames_per_second() \u2192 FPS hi\u1ec7n t\u1ea1i           | Engine.get_author_info()          |\r\n| Engine.iterations_per_second \u2192 tick v\u1eadt l\xfd| Engine.get_frames_drawn()       \u2192 # frame \u0111\xe3 v\u1ebd         | Engine.get_license_info()         |\r\n| Engine.physics_jitter_fix    \u2192 gi\u1ea3m jitter| Engine.is_in_physics_frame()    \u2192 trong physics frame?  | Engine.get_version_info()         |\r\n| Engine.print_error_messages  \u2192 in l\u1ed7i log | Engine.get_physics_frames()     \u2192 # physics frame       | Engine.get_donor_info()           |\r\n| Engine.target_fps            \u2192 FPS m\u1ee5c ti\xeau| Engine.get_idle_frames()        \u2192 # idle frame          | Engine.get_copyright_info()       |\r\n| Engine.time_scale            \u2192 t\u1ed1c \u0111\u1ed9 time| Engine.get_physics_interpolation_fraction() \u2192 t\u1ec9 l\u1ec7 interp|                                   |\r\n+-------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [ENGINE - SINGLETON] QU\u1ea2N L\xdd SINGLETON                                                                                                 |\r\n|----------------------------------------------------------------------------------------------------------------------------------------|\r\n| Engine.get_main_loop()               \u2192 tr\u1ea3 v\u1ec1 MainLoop                                                                                 |\r\n| Engine.has_singleton("Name")         \u2192 ki\u1ec3m tra singleton t\u1ed3n t\u1ea1i                                                                      |\r\n| Engine.get_singleton("Name")         \u2192 l\u1ea5y singleton to\xe0n c\u1ee5c                                                                          |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\r\n| [PERFORMANCE - TIME] TH\u1edcI GIAN & FPS      | [PERFORMANCE - MEMORY] B\u1ed8 NH\u1eda (debug only)              | [PERFORMANCE - OBJECT] OBJECT     |\r\n|-------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| TIME_FPS                \u2192 FPS hi\u1ec7n t\u1ea1i    | MEMORY_STATIC            \u2192 B\u1ed9 nh\u1edb t\u0129nh \u0111ang d\xf9ng        | OBJECT_COUNT            \u2192 # object|\r\n| TIME_PROCESS            \u2192 Th\u1eddi gian frame | MEMORY_DYNAMIC           \u2192 B\u1ed9 nh\u1edb \u0111\u1ed9ng \u0111ang d\xf9ng        | OBJECT_RESOURCE_COUNT   \u2192 # res   |\r\n| TIME_PHYSICS_PROCESS    \u2192 Th\u1eddi gian physics| MEMORY_STATIC_MAX        \u2192 Gi\u1edbi h\u1ea1n b\u1ed9 nh\u1edb t\u0129nh        | OBJECT_NODE_COUNT       \u2192 # node  |\r\n|                                           | MEMORY_DYNAMIC_MAX       \u2192 Gi\u1edbi h\u1ea1n b\u1ed9 nh\u1edb \u0111\u1ed9ng        | OBJECT_ORPHAN_NODE_COUNT\u2192 # orphan|\r\n|                                           | MEMORY_MESSAGE_BUFFER_MAX \u2192 b\u1ed9 nh\u1edb queue buffer        |                                   |\r\n+-------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [PERFORMANCE - RENDER 3D]                 | [PERFORMANCE - RENDER 2D]                              | [PERFORMANCE - VIDEO MEM]         |\r\n|-------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| RENDER_OBJECTS_IN_FRAME       \u2192 # obj 3D  | RENDER_2D_ITEMS_IN_FRAME      \u2192 # item 2D/frame        | RENDER_VIDEO_MEM_USED    \u2192 video  |\r\n| RENDER_VERTICES_IN_FRAME      \u2192 # vertex  | RENDER_2D_DRAW_CALLS_IN_FRAME \u2192 # draw calls 2D        | RENDER_TEXTURE_MEM_USED  \u2192 tex    |\r\n| RENDER_MATERIAL_CHANGES_IN_FRAME\u2192 # thay  |                                                        | RENDER_VERTEX_MEM_USED   \u2192 vertex |\r\n| RENDER_SHADER_CHANGES_IN_FRAME \u2192 # thay   |                                                        | RENDER_USAGE_VIDEO_MEM_TOTAL \u2192 0  |\r\n| RENDER_SURFACE_CHANGES_IN_FRAME\u2192 # thay   |                                                        |                                   |\r\n| RENDER_DRAW_CALLS_IN_FRAME    \u2192 # draw    |                                                        |                                   |\r\n+-------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [PERFORMANCE - PHYSICS 2D]                | [PERFORMANCE - PHYSICS 3D]                             | [PERFORMANCE - AUDIO]             |\r\n|-------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| PHYSICS_2D_ACTIVE_OBJECTS   \u2192 # body 2D   | PHYSICS_3D_ACTIVE_OBJECTS   \u2192 # body 3D                | AUDIO_OUTPUT_LATENCY \u2192 \u0111\u1ed9 tr\u1ec5 \xe2m  |\r\n| PHYSICS_2D_COLLISION_PAIRS  \u2192 # va ch\u1ea1m 2D| PHYSICS_3D_COLLISION_PAIRS  \u2192 # va ch\u1ea1m 3D             |                                   |\r\n| PHYSICS_2D_ISLAND_COUNT     \u2192 # island 2D | PHYSICS_3D_ISLAND_COUNT     \u2192 # island 3D              |                                   |\r\n+-------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [PERFORMANCE - CUSTOM MONITOR]                                                                                                        |\r\n|----------------------------------------------------------------------------------------------------------------------------------------|\r\n| Performance.get_monitor(Performance.TIME_FPS)     \u2192 l\u1ea5y monitor (v\xed d\u1ee5 FPS)                                                           |\r\n| Performance.add_custom_monitor("my/custom", func) \u2192 th\xeam custom monitor                                                              |\r\n| Performance.has_custom_monitor("my/custom")       \u2192 ki\u1ec3m tra                                                                          |\r\n| Performance.remove_custom_monitor("my/custom")    \u2192 x\xf3a                                                                              |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\r\n\n'})})}function a(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(R,{...n})}):R(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>_,x:()=>i});var E=r(6540);const t={},o=E.createContext(t);function _(n){const e=E.useContext(o);return E.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:_(n.components),E.createElement(o.Provider,{value:e},n.children)}}}]);