"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9648],{2619:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Development Core/GDdocs/sys/file","title":"file","description":"","source":"@site/docs/02_Development Core/GDdocs/sys/file.md","sourceDirName":"02_Development Core/GDdocs/sys","slug":"/Development Core/GDdocs/sys/file","permalink":"/ecosys.documents/docs/Development Core/GDdocs/sys/file","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dir","permalink":"/ecosys.documents/docs/Development Core/GDdocs/sys/dir"},"next":{"title":"os","permalink":"/ecosys.documents/docs/Development Core/GDdocs/sys/os"}}');var r=n(4848),o=n(8453);const s={},l=void 0,c={},a=[];function f(e){const t={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'+----------------------------------------------------------------------------------------------------------------------------------------+\r\n|                                              GODOT FILE CHEATSHEET (v3.6 / v4.x)                                                      |\r\n|                                      \u0110\u1ecdc/ghi file \u2013 D\u1eef li\u1ec7u th\xf4, m\xe3 h\xf3a, n\xe9n, CSV, Variant, hash                                        |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\r\n| [FILE - OPEN & CLOSE] M\u1ede & \u0110\xd3NG FILE        | [FILE - INFO & CHECK] TH\xd4NG TIN & KI\u1ec2M TRA             | [FILE - SEEK & POSITION] CON TR\u1ece   |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| File.new()                     \u2192 t\u1ea1o m\u1edbi   | file.is_open()            \u2192 file \u0111ang m\u1edf?              | file.get_position() \u2192 v\u1ecb tr\xed hi\u1ec7n t\u1ea1i|\r\n| file.open(path, READ)          \u2192 m\u1edf \u0111\u1ec3 \u0111\u1ecdc | file.get_len()            \u2192 k\xedch th\u01b0\u1edbc (byte)          | file.seek(pos)      \u2192 nh\u1ea3y \u0111\u1ebfn v\u1ecb tr\xed|\r\n| file.open(path, WRITE)         \u2192 m\u1edf \u0111\u1ec3 ghi | file.get_path()           \u2192 \u0111\u01b0\u1eddng d\u1eabn t\u01b0\u01a1ng \u0111\u1ed1i        | file.seek_end()     \u2192 \u0111\u1ebfn cu\u1ed1i file |\r\n| file.open(path, READ_WRITE)    \u2192 \u0111\u1ecdc+ghi   | file.get_path_absolute()  \u2192 \u0111\u01b0\u1eddng d\u1eabn tuy\u1ec7t \u0111\u1ed1i        | file.eof_reached()  \u2192 \u0111\xe3 \u0111\u1ebfn cu\u1ed1i?  |\r\n| file.close()                   \u2192 \u0111\xf3ng file | file.file_exists("p.txt") \u2192 file t\u1ed3n t\u1ea1i?             |                                   |\r\n| file.flush()                   \u2192 ghi \u0111\u1ec7m   | file.get_error()          \u2192 l\u1ed7i g\u1ea7n nh\u1ea5t              |                                   |\r\n|                                            | file.get_modified_time(path) \u2192 th\u1eddi gian s\u1eeda \u0111\u1ed5i      |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [FILE - STORE] GHI D\u1eee LI\u1ec6U                  | [FILE - GET] \u0110\u1eccC D\u1eee LI\u1ec6U                                | [FILE - BUFFER & CSV] M\u1ea2NG & CSV  |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| file.store_8(255)              \u2192 int 8-bit | file.get_8()                \u2192 \u0111\u1ecdc int 8-bit            | file.store_buffer(PoolByteArray)  |\r\n| file.store_16(65535)           \u2192 int 16-bit| file.get_16()               \u2192 \u0111\u1ecdc int 16-bit           | file.get_buffer(len) \u2192 \u0111\u1ecdc byte   |\r\n| file.store_32(4294967295)      \u2192 int 32-bit| file.get_32()               \u2192 \u0111\u1ecdc int 32-bit           | file.store_csv_line(arr, ",")     |\r\n| file.store_64(-9223372036854775807)\u2192 int 64| file.get_64()               \u2192 \u0111\u1ecdc int 64-bit           | file.get_csv_line(",") \u2192 \u0111\u1ecdc CSV  |\r\n| file.store_float(3.14)         \u2192 float 32  | file.get_float()            \u2192 \u0111\u1ecdc float 32             |                                   |\r\n| file.store_double(3.14159)     \u2192 float 64  | file.get_double()           \u2192 \u0111\u1ecdc float 64             |                                   |\r\n| file.store_real(2.718)         \u2192 real     | file.get_real()             \u2192 \u0111\u1ecdc real                |                                   |\r\n| file.store_string("text")      \u2192 string   | file.get_as_text()          \u2192 to\xe0n b\u1ed9 file (string)    |                                   |\r\n| file.store_line("line\\n")      \u2192 string + \\n| file.get_line()            \u2192 \u0111\u1ecdc m\u1ed9t d\xf2ng              |                                   |\r\n| file.store_pascal_string("s")  \u2192 string + len| file.get_pascal_string()  \u2192 \u0111\u1ecdc chu\u1ed7i Pascal          |                                   |\r\n| file.store_var(var, true)      \u2192 Variant  | file.get_var(true)          \u2192 \u0111\u1ecdc Variant             |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [FILE - COMPRESS & ENCRYPT] N\xc9N & M\xc3 H\xd3A   | [FILE - HASH] B\u0102M FILE                                  | [FILE - MISC] KH\xc1C                |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| file.open_compressed(path, WRITE, ZSTD)   | file.get_md5(path)          \u2192 hash MD5 c\u1ee7a file        | file.set_endian_swap(true)        |\r\n|  \u2192 n\xe9n v\u1edbi: ZSTD, LZO, GZIP, FASTLZ        | file.get_sha256(path)       \u2192 hash SHA-256 c\u1ee7a file   |  \u2192 \u0111\u1ea3o byte order (Big/Little Endian)|\r\n| file.open_encrypted(path, WRITE, key)     |                                                        |                                   |\r\n|  \u2192 m\xe3 h\xf3a AES-256 (key = PoolByteArray 32B)|                                                        |                                   |\r\n| file.open_encrypted_with_pass(path, WRITE, "pass")|                                                  |                                   |\r\n|  \u2192 m\xe3 h\xf3a b\u1eb1ng m\u1eadt kh\u1ea9u                    |                                                        |                                   |\r\n|                                            |                                                        |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| GHI CH\xda:                                                                                                                               |\r\n| \u2022 \ud83d\udcc1 Lu\xf4n g\u1ecdi file.close() sau khi m\u1edf \u2013 t\u1ed1t nh\u1ea5t n\xean d\xf9ng v\u1edbi if/else ho\u1eb7c _exit \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o \u0111\xf3ng.                                        |\r\n| \u2022 \ud83d\udd10 M\xe3 h\xf3a ch\u1ec9 an to\xe0n \u1edf m\u1ee9c c\u01a1 b\u1ea3n \u2013 kh\xf4ng ch\u1ed1ng \u0111\u01b0\u1ee3c ng\u01b0\u1eddi d\xf9ng tinh vi (mod file, dump memory).                                      |\r\n| \u2022 \ud83e\udde9 N\xe9n ph\xf9 h\u1ee3p \u0111\u1ec3 gi\u1ea3m k\xedch th\u01b0\u1edbc file save, log, ho\u1eb7c d\u1eef li\u1ec7u m\u1ea1ng.                                                                  |\r\n| \u2022 \ud83d\udce6 store_var() / get_var() h\u1ed7 tr\u1ee3 m\u1ecdi ki\u1ec3u Godot: Dictionary, Array, Object, v.v. \u2013 r\u1ea5t ti\u1ec7n cho l\u01b0u tr\u1ea1ng th\xe1i.                      |\r\n| \u2022 \ud83d\udd0d Con tr\u1ecf file (seek) r\u1ea5t quan tr\u1ecdng khi \u0111\u1ecdc/ghi d\u1eef li\u1ec7u nh\u1ecb ph\xe2n c\xf3 c\u1ea5u tr\xfac.                                                       |\r\n| \u2022 \ud83e\uddee MD5/SHA-256 d\xf9ng \u0111\u1ec3 ki\u1ec3m tra t\xednh to\xe0n v\u1eb9n file (v\xed d\u1ee5: save file c\xf3 b\u1ecb s\u1eeda kh\xf4ng?).                                                |\r\n| \u2022 \ud83c\udf10 D\u1eef li\u1ec7u nh\u1ecb ph\xe2n (store_*, get_*) c\u1ea7n \u0111\xfang th\u1ee9 t\u1ef1 byte \u2013 d\xf9ng set_endian_swap() n\u1ebfu c\u1ea7n t\u01b0\u01a1ng th\xedch n\u1ec1n t\u1ea3ng.                      |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\n'})})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var i=n(6540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);