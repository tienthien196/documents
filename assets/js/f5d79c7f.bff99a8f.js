"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8432],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}},9396:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>v,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"GDdocs/input/inputevent","title":"inputevent","description":"","source":"@site/docs/GDdocs/input/inputevent.md","sourceDirName":"GDdocs/input","slug":"/GDdocs/input/inputevent","permalink":"/ecosys.documents/docs/GDdocs/input/inputevent","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"input","permalink":"/ecosys.documents/docs/GDdocs/input/"},"next":{"title":"enet","permalink":"/ecosys.documents/docs/GDdocs/net/enet"}}');var o=t(4848),s=t(8453);const i={},c=void 0,u={},a=[];function p(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'+----------------------------------------------------------------------------------------------------------------------------------------+\r\n|                                          GODOT INPUT SYSTEM CHEATSHEET (v3.6 / v4.x)                                                  |\r\n|                               X\u1eed l\xfd s\u1ef1 ki\u1ec7n ng\u01b0\u1eddi d\xf9ng: Ph\xedm, Chu\u1ed9t, Action, Modifier, Stylus                                          |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\r\n| [INPUT - BASE EVENT] S\u1ef0 KI\u1ec6N C\u01a0 B\u1ea2N         | [INPUT - MODIFIERS] PH\xcdM CH\u1ee8C N\u0102NG                    | [INPUT - ACTION] H\xc0NH \u0110\u1ed8NG          |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| event.get_device()       \u2192 thi\u1ebft b\u1ecb (0=KB) | event.get_shift()       \u2192 Shift \u0111ang nh\u1ea5n?            | event.is_action("jump") \u2192 kh\u1edbp action?|\r\n| event.set_device(0)      \u2192 g\xe1n thi\u1ebft b\u1ecb    | event.get_control()     \u2192 Ctrl \u0111ang nh\u1ea5n?             | event.is_action_pressed("jump") \u2192 nh\u1ea5n?|\r\n| event.as_text()          \u2192 t\xean event (str) | event.get_alt()         \u2192 Alt \u0111ang nh\u1ea5n?              | event.is_action_released("jump") \u2192 nh\u1ea3?|\r\n| event.is_pressed()       \u2192 \u0111ang nh\u1ea5n?      | event.get_command()     \u2192 Cmd (Mac)                  | event.get_action_strength("move") \u2192 0~1|\r\n| event.is_released()      \u2192 \u0111\xe3 nh\u1ea3?         | event.get_metakey()     \u2192 Meta (Windows key)          | InputMap.add_action("fire")       |\r\n| event.is_canceled()      \u2192 b\u1ecb h\u1ee7y?         | event.set_shift(true)   \u2192 gi\u1ea3 l\u1eadp nh\u1ea5n Shift         | InputMap.action_add_event("fire", key)|\r\n| event.is_echo()          \u2192 l\u1eb7p ph\xedm (0.5s)| event.set_control(true) \u2192 gi\u1ea3 l\u1eadp Ctrl               |                                   |\r\n| event.is_action_type()   \u2192 l\xe0 action?      |                                                        |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [INPUT - KEYBOARD] B\xc0N PH\xcdM                 | [INPUT - MOUSE BUTTON] N\xdaT CHU\u1ed8T                      | [INPUT - MOUSE MOTION] DI CHUY\u1ec2N   |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| InputEventKey.new()      \u2192 t\u1ea1o event ph\xedm  | InputEventMouseButton.new() \u2192 t\u1ea1o event n\xfat chu\u1ed9t     | InputEventMouseMotion.new() \u2192 t\u1ea1o|\r\n| event.scancode = KEY_A   \u2192 m\xe3 ph\xedm (layout)| event.button_index = BUTTON_LEFT                     | event.position = Vector2(300,200) |\r\n| event.physical_scancode  \u2192 v\u1ecb tr\xed v\u1eadt l\xfd   | event.pressed = true     \u2192 tr\u1ea1ng th\xe1i nh\u1ea5n           | event.relative = Vector2(10, -5)  |\r\n| event.unicode = \'A\'      \u2192 k\xfd t\u1ef1 Unicode   | event.doubleclick = true \u2192 click \u0111\xfap?                | event.speed = Vector2(100, 80)    |\r\n| event.is_echo()          \u2192 l\u1eb7p ph\xedm?       | event.factor = 1.0       \u2192 h\u1ec7 s\u1ed1 cu\u1ed9n (wheel)         | event.pressure = 0.7             |\r\n|                                            | event.canceled = false   \u2192 b\u1ecb h\u1ee7y?                    | event.tilt = Vector2(0.3, -0.2)   |\r\n|                                            |                                                        | event.pen_inverted = false        |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [INPUT - EVENT CONTROL] \u0110I\u1ec0U KHI\u1ec2N S\u1ef0 KI\u1ec6N | [INPUT - UTILITY] TI\u1ec6N \xcdCH                            | [INPUT - ENUMS] H\u1eb0NG S\u1ed0           |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| event.shortcut_match(e2) \u2192 so s\xe1nh event   | OS.get_scancode_string(code) \u2192 t\xean ph\xedm t\u1eeb scancode   | MouseButton:                     |\r\n| event.accumulate(e2)     \u2192 g\u1ed9p di chuy\u1ec3n   | event.xformed_by(transform) \u2192 bi\u1ebfn \u0111\u1ed5i v\u1ecb tr\xed chu\u1ed9t   |  BUTTON_LEFT = 1                 |\r\n| event.xformed_by(...)    \u2192 xoay/d\u1ecbch chu\u1ed9t| Input.parse_input_event(event) \u2192 g\u1eedi event gi\u1ea3 l\u1eadp   |  BUTTON_RIGHT = 2                |\r\n|                                            |                                                        |  BUTTON_MIDDLE = 3               |\r\n|                                            |                                                        |  BUTTON_WHEEL_UP = 4             |\r\n|                                            |                                                        |  BUTTON_WHEEL_DOWN = 5           |\r\n|                                            |                                                        |  BUTTON_XBUTTON1 = 6             |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| GHI CH\xda:                                                                                                                               |\r\n| \u2022 \u2757 Ch\u1ec9 x\u1eed l\xfd input trong _input(event) ho\u1eb7c _unhandled_input(event) \u2014 kh\xf4ng n\xean d\xf9ng _process.                                          |\r\n| \u2022 D\xf9ng InputMap \u0111\u1ec3 \xe1nh x\u1ea1 ph\xedm/mouse th\xe0nh action (move, jump, fire) \u2014 d\u1ec5 c\u1ea5u h\xecnh v\xe0 thay \u0111\u1ed5i.                                          |\r\n| \u2022 event.relative trong InputEventMouseMotion r\u1ea5t h\u1eefu \xedch \u0111\u1ec3 \u0111i\u1ec1u khi\u1ec3n camera, v\u1ebd, ho\u1eb7c drag.                                           |\r\n| \u2022 pressure v\xe0 tilt ch\u1ec9 c\xf3 hi\u1ec7u l\u1ef1c v\u1edbi b\xfat stylus (tablet, iPad, Surface).                                                             |\r\n| \u2022 parse_input_event() d\xf9ng \u0111\u1ec3 gi\u1ea3 l\u1eadp input (test, replay, remote control).                                                            |\r\n| \u2022 T\u1ed1t nh\u1ea5t n\xean d\xf9ng is_action_pressed() thay v\xec ki\u1ec3m tra keycode tr\u1ef1c ti\u1ebfp \u2014 \u0111\u1ec3 h\u1ed7 tr\u1ee3 tay c\u1ea7m, remap.                                  |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\n'})})}function v(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);