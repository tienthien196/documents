"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[98],{4657:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>_,frontMatter:()=>a,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"GDdocs/input/input","title":"input","description":"","source":"@site/docs/GDdocs/input/input.md","sourceDirName":"GDdocs/input","slug":"/GDdocs/input/","permalink":"/documents/docs/GDdocs/input/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"str","permalink":"/documents/docs/GDdocs/data/str"},"next":{"title":"inputevent","permalink":"/documents/docs/GDdocs/input/inputevent"}}');var o=e(4848),i=e(8453);const a={},p=void 0,u={},s=[];function c(n){const t={code:"code",pre:"pre",...(0,i.R)(),...n.components};return(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'+----------------------------------------------------------------------------------------------------------------------------------------+\r\n|                                          GODOT INPUTMAP & INPUT CHEATSHEET (v3.6 / v4.5)                                               |\r\n|                             Qu\u1ea3n l\xfd h\xe0nh \u0111\u1ed9ng, \u0111i\u1ec1u khi\u1ec3n to\xe0n c\u1ee5c, tay c\u1ea7m, con tr\u1ecf & c\u1ea3m bi\u1ebfn                                        |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\r\n| [INPUTMAP - ACTION] QU\u1ea2N L\xdd H\xc0NH \u0110\u1ed8NG        | [INPUTMAP - EVENT & DEADZONE] S\u1ef0 KI\u1ec6N & V\xd9NG CH\u1ebeT     | [INPUTMAP - CONFIG] C\u1ea4U H\xccNH       |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| InputMap.has_action("jump")  \u2192 t\u1ed3n t\u1ea1i?    | InputMap.get_action_list("move") \u2192 danh s\xe1ch event   | InputMap.add_action("jump", 0.2)  |\r\n| InputMap.add_action("jump")  \u2192 th\xeam m\u1edbi    | InputMap.action_has_event(act, ev) \u2192 c\xf3 event kh\xf4ng? |  \u2192 th\xeam h\xe0nh \u0111\u1ed9ng + deadzone      |\r\n| InputMap.erase_action("jump")\u2192 x\xf3a h\xe0nh \u0111\u1ed9ng| InputMap.action_add_event(act, ev) \u2192 g\xe1n event       | InputMap.action_set_deadzone(a,z) |\r\n| InputMap.get_actions()       \u2192 t\u1ea5t c\u1ea3 action| InputMap.action_erase_event(act, ev) \u2192 x\xf3a event     |  \u2192 thi\u1ebft l\u1eadp v\xf9ng ch\u1ebft            |\r\n|                                            | InputMap.action_erase_events("fire") \u2192 x\xf3a t\u1ea5t c\u1ea3    | InputMap.action_get_deadzone(a)   |\r\n|                                            | InputMap.event_is_action(ev, "ui_accept", false)     |  \u2192 l\u1ea5y deadzone hi\u1ec7n t\u1ea1i          |\r\n|                                            |  \u2192 ki\u1ec3m tra event c\xf3 ph\u1ea3i action?                    | InputMap.load_from_globals()     |\r\n|                                            |                                                        |  \u2192 t\u1ea3i l\u1ea1i t\u1eeb ProjectSettings    |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [INPUT - ACTION] KI\u1ec2M TRA H\xc0NH \u0110\u1ed8NG         | [INPUT - KEY & MOUSE] PH\xcdM & CHU\u1ed8T                  | [INPUT - CURSOR] CON TR\u1ece CHU\u1ed8T   |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| Input.is_action_pressed("jump")     \u2192 nh\u1ea5n?| Input.is_key_pressed(KEY_A)       \u2192 nh\u1ea5n ph\xedm?       | Input.set_default_cursor_shape(s) |\r\n| Input.is_action_just_pressed("jump")\u2192 v\u1eeba nh\u1ea5n?| Input.is_physical_key_pressed(KEY_A) \u2192 theo v\u1ecb tr\xed|  \u2192 \u0111\u1eb7t ki\u1ec3u con tr\u1ecf m\u1eb7c \u0111\u1ecbnh      |\r\n| Input.is_action_just_released("jump")\u2192 v\u1eeba nh\u1ea3?| Input.is_mouse_button_pressed(BUTTON_LEFT) \u2192 chu\u1ed9t| Input.get_current_cursor_shape() |\r\n| Input.get_action_strength("move")   \u2192 c\u01b0\u1eddng \u0111\u1ed9| Input.get_mouse_button_mask()   \u2192 bitmask n\xfat \u0111ang nh\u1ea5n|  \u2192 l\u1ea5y ki\u1ec3u hi\u1ec7n t\u1ea1i             |\r\n| Input.get_action_raw_strength("move")\u2192 raw  | Input.warp_mouse_position(pos)    \u2192 di chuy\u1ec3n chu\u1ed9t  | Input.set_custom_mouse_cursor(img, shape, hotspot)|\r\n| Input.get_axis("left","right")      \u2192 tr\u1ee5c (-1~1)| Input.get_last_mouse_speed()  \u2192 v\u1eadn t\u1ed1c chu\u1ed9t     |  \u2192 \u0111\u1eb7t con tr\u1ecf t\xf9y ch\u1ec9nh (PNG/SVG)|\r\n| Input.get_vector("l","r","u","d",dz)\u2192 vector2|                                                        |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [INPUT - JOYPAD] TAY C\u1ea6M & RUNG             | [INPUT - JOY MAPPING] \xc1NH X\u1ea0 TAY C\u1ea6M                  | [INPUT - SENSORS] C\u1ea2M BI\u1ebeN (Mobile)|\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| Input.is_joy_button_pressed(id, btn) \u2192 n\xfat?| Input.add_joy_mapping(mapping, true) \u2192 th\xeam mapping   | Input.set_accelerometer(vec)     |\r\n| Input.get_joy_axis(id, axis)       \u2192 tr\u1ee5c   | Input.remove_joy_mapping(guid)    \u2192 x\xf3a mapping      |  \u2192 gi\u1ea3 l\u1eadp gia t\u1ed1c k\u1ebf            |\r\n| Input.get_joy_name(id)             \u2192 t\xean    | Input.get_joy_guid(id)          \u2192 GUID thi\u1ebft b\u1ecb      | Input.set_gravity(vec)           |\r\n| Input.get_connected_joypads()      \u2192 danh s\xe1ch| Input.get_joy_axis_string(0)    \u2192 "leftx"           |  \u2192 gi\u1ea3 l\u1eadp tr\u1ecdng l\u1ef1c             |\r\n| Input.joy_connection_changed(...)  \u2192 s\u1ef1 ki\u1ec7n| Input.get_joy_button_string(0)  \u2192 "a"               | Input.set_gyroscope(vec)         |\r\n|                                            | Input.get_joy_axis_index_from_string("leftx") \u2192 0   |  \u2192 gi\u1ea3 l\u1eadp con quay h\u1ed3i chuy\u1ec3n   |\r\n|                                            | Input.get_joy_button_index_from_string("a") \u2192 0     | Input.set_magnetometer(vec)      |\r\n|                                            |                                                        |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [INPUT - VIBRATION] RUNG & PH\u1ea2N H\u1ed2I         | [INPUT - MISC] KH\xc1C                                   | [INPUT - ENUMS] H\u1eb0NG S\u1ed0           |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| Input.start_joy_vibration(id, weak, strong, dur)| \u2192 rung tay c\u1ea7m (0~1)                            | MouseMode:                         |\r\n| Input.stop_joy_vibration(id)       \u2192 d\u1eebng   | Input.action_press("jump", 1.0) \u2192 gi\u1ea3 l\u1eadp nh\u1ea5n      |  MOUSE_MODE_VISIBLE = 0           |\r\n| Input.vibrate_handheld(500)        \u2192 rung mobile (ms)| Input.action_release("jump") \u2192 gi\u1ea3 l\u1eadp nh\u1ea3     |  MOUSE_MODE_HIDDEN = 1            |\r\n| Input.get_joy_vibration_duration(id)\u2192 th\u1eddi gian c\xf2n l\u1ea1i| Input.flush_buffered_events() \u2192 x\xf3a event ch\u1edd|  MOUSE_MODE_CAPTURED = 2          |\r\n| Input.get_joy_vibration_strength(id)\u2192 c\u01b0\u1eddng \u0111\u1ed9 rung| Input.parse_input_event(ev) \u2192 g\u1eedi event gi\u1ea3 l\u1eadp|  MOUSE_MODE_CONFINED = 3          |\r\n|                                            |                                                        |  MOUSE_MODE_CONFINED_HIDDEN = 4   |\r\n|                                            |                                                        |                                   |\r\n|                                            |                                                        | CursorShape:                     |\r\n|                                            |                                                        |  CURSOR_ARROW, IBEAM, POINTING_HAND,...|\r\n|                                            |                                                        |  (xem danh s\xe1ch \u0111\u1ea7y \u0111\u1ee7 b\xean d\u01b0\u1edbi)  |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| GHI CH\xda:                                                                                                                               |\r\n| \u2022 InputMap d\xf9ng \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a h\xe0nh \u0111\u1ed9ng (action) nh\u01b0 "jump", "ui_accept" \u2014 \u0111\u1ed9c l\u1eadp v\u1edbi thi\u1ebft b\u1ecb \u0111\u1ea7u v\xe0o.                                |\r\n| \u2022 D\xf9ng get_action_*() thay v\xec ki\u1ec3m tra ph\xedm tr\u1ef1c ti\u1ebfp \u2014 \u0111\u1ec3 h\u1ed7 tr\u1ee3 remap, tay c\u1ea7m, controller.                                           |\r\n| \u2022 Deadzone r\u1ea5t quan tr\u1ecdng v\u1edbi joystick \u2014 tr\xe1nh drift khi tay c\u1ea7m kh\xf4ng v\u1ec1 0 ho\xe0n to\xe0n.                                                  |\r\n| \u2022 set_custom_mouse_cursor() h\u1ed7 tr\u1ee3 PNG, SVG \u2014 hotspot l\xe0 \u0111i\u1ec3m nh\u1ea5p (v\xed d\u1ee5: \u0111\u1ea7u kim).                                                    |\r\n| \u2022 warp_mouse_position() + MOUSE_MODE_CAPTURED \u2192 d\xf9ng \u0111\u1ec3 kh\xf3a chu\u1ed9t gi\u1eefa m\xe0n h\xecnh (FPS, camera xoay).                                    |\r\n| \u2022 C\xe1c h\xe0m c\u1ea3m bi\u1ebfn (accelerometer, gyroscope) ch\u1ec9 \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn Input \u2014 d\xf9ng \u0111\u1ec3 test ho\u1eb7c gi\u1ea3 l\u1eadp tr\xean PC.                              |\r\n| \u2022 add_joy_mapping() d\xf9ng \u0111\u1ec3 h\u1ed7 tr\u1ee3 tay c\u1ea7m kh\xf4ng chu\u1ea9n (theo chu\u1ea9n SDL2 Game Controller).                                               |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\n'})})}function _(n={}){const{wrapper:t}={...(0,i.R)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>a,x:()=>p});var r=e(6540);const o={},i=r.createContext(o);function a(n){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function p(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),r.createElement(i.Provider,{value:t},n.children)}}}]);