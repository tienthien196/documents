"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8560],{1073:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>_,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"GDdocs/net/websk","title":"websk","description":"","source":"@site/docs/GDdocs/net/websk.md","sourceDirName":"GDdocs/net","slug":"/GDdocs/net/websk","permalink":"/documents/docs/GDdocs/net/websk","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tcp","permalink":"/documents/docs/GDdocs/net/tcp"},"next":{"title":"dir","permalink":"/documents/docs/GDdocs/sys/dir"}}');var c=t(4848),s=t(8453);const i={},o=void 0,a={},d=[];function l(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'+----------------------------------------------------------------------------------------------------------------------------------------+\r\n|                                         GODOT WEBSOCKET & WEBRTC CHEATSHEET (v4.5 beta)                                                 |\r\n|                              K\u1ebft n\u1ed1i th\u1eddi gian th\u1ef1c, multiplayer qua m\u1ea1ng, Web & Desktop \u2013 Giao ti\u1ebfp kh\xf4ng \u0111\u1ed3ng b\u1ed9                     |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\r\n| [WEBSOCKET - CLIENT] K\u1ebeT N\u1ed0I \u0110\u1ebeN SERVER     | [WEBSOCKET - SERVER] T\u1ea0O SERVER                        | [WEBSOCKET - PEER] \u0110\u1ed0I T\u01af\u1ee2NG PEER  |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| ws_client.connect_to_url(url) \u2192 k\u1ebft n\u1ed1i   | ws_server.listen(port, protocols) \u2192 b\u1eaft \u0111\u1ea7u          | peer.is_connected_to_host() \u2192 k\u1ebft n\u1ed1i?|\r\n| ws_client.poll() \u2192 x\u1eed l\xfd k\u1ebft n\u1ed1i           | ws_server.poll() \u2192 x\u1eed l\xfd k\u1ebft n\u1ed1i                     | peer.get_connected_host() \u2192 IP     |\r\n| connection_established \u2192 th\xe0nh c\xf4ng        | client_connected(id, proto) \u2192 client n\u1ed1i             | peer.get_connected_port() \u2192 c\u1ed5ng   |\r\n| connection_error \u2192 l\u1ed7i                     | client_disconnected(id) \u2192 client ng\u1eaft                | peer.get_write_mode() \u2192 text/binary|\r\n| data_received \u2192 nh\u1eadn d\u1eef li\u1ec7u               | data_received(id) \u2192 nh\u1eadn t\u1eeb client                  | peer.set_write_mode(TEXT/BINARY)   |\r\n| ws_client.disconnect_from_host() \u2192 ng\u1eaft    | ws_server.disconnect_peer(id) \u2192 ng\u1eaft client          | peer.was_string_packet() \u2192 d\u1ea1ng g\xf3i|\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [WEBSOCKET - MULTIPLAYER] T\xcdCH H\u1ee2P MP      | [WEBRTC - DATACHANNEL] K\xcaNH D\u1eee LI\u1ec6U                  | [WEBSOCKET - CONFIG] C\u1ea4U H\xccNH      |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| ws_server.listen(..., gd_mp_api=true) \u2192 b\u1eadt| WebRTCDataChannel.new() \u2192 t\u1ea1o k\xeanh                  | ws_server.set_bind_ip("127.0.0.1")|\r\n| ws_server.connect("peer_packet", ...) \u2192 nh\u1eadn| channel.get_ready_state() \u2192 tr\u1ea1ng th\xe1i              |  \u2192 IP server l\u1eafng nghe            |\r\n| peer_packet(peer_id) \u2192 x\u1eed l\xfd g\xf3i tin       | channel.put_packet(data) \u2192 g\u1eedi d\u1eef li\u1ec7u              | ws_server.set_handshake_timeout(5)|\r\n|                                            | channel.get_packet() \u2192 nh\u1eadn d\u1eef li\u1ec7u                 |  \u2192 timeout b\u1eaft tay                |\r\n|                                            | channel.get_available_packet_count() \u2192 s\u1ed1 g\xf3i ch\u1edd   | ws_server.set_extra_headers([...])|\r\n|                                            | channel.close() \u2192 \u0111\xf3ng k\xeanh                         |  \u2192 header t\xf9y ch\u1ec9nh                |\r\n|                                            |                                                        | ws_client.set_verify_ssl_enabled(true)|\r\n|                                            |                                                        |  \u2192 b\u1eadt x\xe1c th\u1ef1c SSL               |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| GHI CH\xda:                                                                                                                               |\r\n| \u2022 \ud83d\udd04 Lu\xf4n g\u1ecdi poll() \u0111\u1ecbnh k\u1ef3 trong _process() \u2013 r\u1ea5t quan tr\u1ecdng \u0111\u1ec3 x\u1eed l\xfd k\u1ebft n\u1ed1i v\xe0 d\u1eef li\u1ec7u.                                              |\r\n| \u2022 \ud83d\udd10 WebSocketClient h\u1ed7 tr\u1ee3 SSL (wss://) \u2013 d\xf9ng set_verify_ssl_enabled(true) v\xe0 set_trusted_ssl_certificate() \u0111\u1ec3 x\xe1c th\u1ef1c.              |\r\n| \u2022 \ud83d\udce1 WebSocketServer c\xf3 th\u1ec3 t\xedch h\u1ee3p v\u1edbi MultiplayerAPI \u2013 d\xf9ng gd_mp_api=true \u0111\u1ec3 x\u1eed l\xfd RPC/RSET qua WebSocket.                           |\r\n| \u2022 \ud83c\udf10 WebRTCDataChannel d\xf9ng cho k\u1ebft n\u1ed1i P2P (trong tr\xecnh duy\u1ec7t ho\u1eb7c qua signaling server) \u2013 l\xfd t\u01b0\u1edfng cho game real-time, voice chat.     |\r\n| \u2022 \ud83e\udde9 put_packet() / get_packet() d\xf9ng PoolByteArray \u2013 d\xf9ng .to_utf8() v\xe0 .get_string_from_utf8() \u0111\u1ec3 x\u1eed l\xfd chu\u1ed7i.                        |\r\n| \u2022 \ud83d\udce6 set_buffers() gi\xfap t\u1ed1i \u01b0u hi\u1ec7u n\u0103ng \u2013 t\u0103ng buffer n\u1ebfu g\u1eedi d\u1eef li\u1ec7u l\u1edbn.                                                             |\r\n| \u2022 \ud83d\udeab Kh\xf4ng d\xf9ng yield() trong _on_data_received() \u2013 c\xf3 th\u1ec3 g\xe2y treo. D\xf9ng call_deferred() n\u1ebfu c\u1ea7n tr\xec ho\xe3n.                              |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\n'})})}function _(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const c={},s=r.createContext(c);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);