"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7449],{1024:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>_,default:()=>S,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Development Core/GDdocs/sys/os","title":"os","description":"","source":"@site/docs/02_Development Core/GDdocs/sys/os.md","sourceDirName":"02_Development Core/GDdocs/sys","slug":"/Development Core/GDdocs/sys/os","permalink":"/ecosys.documents/docs/Development Core/GDdocs/sys/os","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"file","permalink":"/ecosys.documents/docs/Development Core/GDdocs/sys/file"},"next":{"title":"performance","permalink":"/ecosys.documents/docs/Development Core/GDdocs/sys/performance"}}');var s=t(4848),o=t(8453);const i={},_=void 0,c={},a=[];function d(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'+----------------------------------------------------------------------------------------------------------------------------------------+\r\n|                                               GODOT OS CHEATSHEET (v3.6 / v4.x)                                                       |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\r\n| [OS - DEVICE INFO] THI\u1ebeT B\u1eca & PH\u1ea6N C\u1ee8NG     | [OS - SYSTEM INFO] H\u1ec6 TH\u1ed0NG & M\xd4I TR\u01af\u1edcNG               | [OS - TIME & TICKS] TH\u1edcI GIAN     |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| OS.get_model_name()        \u2192 t\xean thi\u1ebft b\u1ecb  | OS.get_name()             \u2192 t\xean H\u0110H (Windows, Linux)   | OS.get_ticks_msec()    \u2192 tick (ms)|\r\n| OS.get_unique_id()         \u2192 ID duy nh\u1ea5t   | OS.get_locale()           \u2192 locale h\u1ec7 th\u1ed1ng (vi_VN)    | OS.get_ticks_usec()    \u2192 tick (\u03bcs)|\r\n| OS.get_processor_count()   \u2192 s\u1ed1 l\xf5i CPU    | OS.get_locale_language()  \u2192 ng\xf4n ng\u1eef (vi, en)         | OS.get_splash_tick_msec()\u2192 splash|\r\n| OS.get_processor_name()    \u2192 t\xean CPU       | OS.has_environment("HOME")\u2192 c\xf3 bi\u1ebfn m\xf4i tr\u01b0\u1eddng?       | OS.get_system_time_msecs() \u2192 sys |\r\n| OS.get_power_percent_left()\u2192 % pin c\xf2n l\u1ea1i | OS.get_environment("HOME")\u2192 gi\xe1 tr\u1ecb bi\u1ebfn             | OS.get_system_time_secs()  \u2192 sys |\r\n| OS.get_power_seconds_left()\u2192 th\u1eddi l\u01b0\u1ee3ng pin| OS.set_environment("K","V")\u2192 \u0111\u1eb7t bi\u1ebfn m\xf4i tr\u01b0\u1eddng      | OS.get_unix_time()       \u2192 Unix  |\r\n| OS.get_power_state()       \u2192 tr\u1ea1ng th\xe1i pin| OS.get_executable_path()  \u2192 \u0111\u01b0\u1eddng d\u1eabn th\u1ef1c thi        | OS.get_datetime_from_unix_time(t)|\r\n|                                            | OS.get_cache_dir()        \u2192 th\u01b0 m\u1ee5c cache             | OS.get_unix_time_from_datetime(d)|\r\n|                                            | OS.get_config_dir()       \u2192 c\u1ea5u h\xecnh ng\u01b0\u1eddi d\xf9ng       |                                   |\r\n|                                            | OS.get_data_dir()         \u2192 d\u1eef li\u1ec7u to\xe0n c\u1ee5c          |                                   |\r\n|                                            | OS.get_user_data_dir()    \u2192 user://                  |                                   |\r\n|                                            | OS.get_system_dir(...)    \u2192 th\u01b0 m\u1ee5c h\u1ec7 th\u1ed1ng          |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [OS - WINDOW] QU\u1ea2N L\xdd C\u1eecA S\u1ed4                | [OS - DISPLAY] M\xc0N H\xccNH & HI\u1ec2N TH\u1eca                    | [OS - INPUT] B\xc0N PH\xcdM & NH\u1eacP LI\u1ec6U |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| OS.window_position         \u2192 v\u1ecb tr\xed c\u1eeda s\u1ed5 | OS.get_screen_count()     \u2192 s\u1ed1 m\xe0n h\xecnh              | OS.keyboard_get_layout_count()   |\r\n| OS.window_size             \u2192 k\xedch th\u01b0\u1edbc    | OS.get_current_screen()   \u2192 m\xe0n h\xecnh hi\u1ec7n t\u1ea1i         |  \u2192 s\u1ed1 layout b\xe0n ph\xedm             |\r\n| OS.max_window_size         \u2192 k\xedch th\u01b0\u1edbc max| OS.get_screen_size()      \u2192 k\xedch th\u01b0\u1edbc m\xe0n h\xecnh       | OS.keyboard_get_layout_name(i)   |\r\n| OS.min_window_size         \u2192 k\xedch th\u01b0\u1edbc min| OS.get_screen_position()  \u2192 v\u1ecb tr\xed m\xe0n h\xecnh          |  \u2192 t\xean layout                     |\r\n| OS.get_real_window_size()  \u2192 k\xedch th\u01b0\u1edbc th\u1eadt| OS.get_screen_dpi()       \u2192 DPI m\xe0n h\xecnh             | OS.keyboard_get_current_layout() |\r\n| OS.get_window_safe_area()  \u2192 v\xf9ng an to\xe0n  | OS.get_screen_refresh_rate()\u2192 t\u1ea7n s\u1ed1 qu\xe9t             |  \u2192 layout hi\u1ec7n t\u1ea1i                |\r\n| OS.window_fullscreen       \u2192 to\xe0n m\xe0n h\xecnh | OS.get_screen_scale()     \u2192 t\u1ef7 l\u1ec7 scale              | OS.keyboard_set_current_layout(i)|\r\n| OS.window_resizable        \u2192 c\xf3 th\u1ec3 resize?| OS.get_screen_max_scale() \u2192 scale t\u1ed1i \u0111a             | OS.find_scancode_from_string("A")|\r\n| OS.window_maximized        \u2192 \u0111\xe3 ph\xf3ng to?  | OS.vsync_enabled           \u2192 b\u1eadt VSync               |  \u2192 scancode t\u1eeb t\xean                |\r\n| OS.window_minimized        \u2192 \u0111\xe3 thu nh\u1ecf?   | OS.vsync_via_compositor   \u2192 VSync qua compositor     | OS.get_scancode_string(KEY_A)    |\r\n| OS.window_borderless       \u2192 kh\xf4ng vi\u1ec1n    | OS.delta_smoothing         \u2192 l\xe0m m\u1ecbn delta time      |  \u2192 t\xean ph\xedm t\u1eeb scancode           |\r\n| OS.window_per_pixel_transparency_enabled \u2192| OS.low_processor_usage_mode \u2192 ti\u1ebft ki\u1ec7m CPU           | OS.is_scancode_unicode(KEY_A)    |\r\n|  trong su\u1ed1t pixel                          |  sleep_usec \u2192 th\u1eddi gian ngh\u1ec9 gi\u1eefa frame               |  \u2192 scancode c\xf3 Unicode?           |\r\n| OS.set_window_title("Game")\u2192 \u0111\u1eb7t ti\xeau \u0111\u1ec1   | OS.can_draw()              \u2192 c\xf3 th\u1ec3 v\u1ebd kh\xf4ng?         |                                   |\r\n| OS.set_icon(load("icon.png"))\u2192 \u0111\u1eb7t icon    |                                                        |                                   |\r\n| OS.center_window()         \u2192 gi\u1eefa m\xe0n h\xecnh |                                                        |                                   |\r\n| OS.move_window_to_foreground()\u2192 \u0111\u01b0a l\xean tr\u01b0\u1edbc|                                                      |                                   |\r\n| OS.set_window_always_on_top(true) \u2192 lu\xf4n tr\xean|                                                      |                                   |\r\n| OS.is_window_focused()     \u2192 \u0111ang focus?   |                                                        |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [OS - RESOURCES & MEMORY] B\u1ed8 NH\u1eda & T\xc0I NGUY\xcaN| [OS - PROCESS & THREADS] TI\u1ebeN TR\xccNH & LU\u1ed2NG         | [OS - INTERACTION] T\u01af\u01a0NG T\xc1C     |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| OS.get_static_memory_usage()   \u2192 b\u1ed9 nh\u1edb t\u0129nh| OS.get_process_id()        \u2192 ID ti\u1ebfn tr\xecnh           | OS.alert("msg", "title") \u2192 th\xf4ng b\xe1o|\r\n| OS.get_dynamic_memory_usage()  \u2192 b\u1ed9 nh\u1edb \u0111\u1ed9ng| OS.is_process_running(pid) \u2192 ti\u1ebfn tr\xecnh \u0111ang ch\u1ea1y?   | OS.crash("error")        \u2192 g\xe2y crash|\r\n| OS.get_static_memory_peak_usage()\u2192 \u0111\u1ec9nh b\u1ed9 nh\u1edb| OS.kill(pid)              \u2192 gi\u1ebft ti\u1ebfn tr\xecnh          | OS.delay_msec(1000)      \u2192 ch\u1edd 1s  |\r\n| OS.print_resources_in_use()    \u2192 in t\xe0i nguy\xean| OS.get_main_thread_id()   \u2192 ID lu\u1ed3ng ch\xednh           | OS.delay_usec(1000000)   \u2192 ch\u1edd 1s  |\r\n| OS.print_all_resources("log.txt")\u2192 in t\u1ea5t c\u1ea3| OS.get_thread_caller_id() \u2192 ID lu\u1ed3ng hi\u1ec7n t\u1ea1i        | OS.shell_open("url")     \u2192 m\u1edf URL |\r\n| OS.print_resources_by_type(["T"])\u2192 theo lo\u1ea1i| OS.can_use_threads()       \u2192 h\u1ed7 tr\u1ee3 \u0111a lu\u1ed3ng?         | OS.execute("cmd",args,block,out) |\r\n| OS.dump_memory_to_file("mem.log")\u2192 ghi log b\u1ed9 nh\u1edb| OS.set_thread_name("Worker") \u2192 \u0111\u1eb7t t\xean lu\u1ed3ng      |  \u2192 ch\u1ea1y l\u1ec7nh h\u1ec7 th\u1ed1ng             |\r\n| OS.dump_resources_to_file("res.log")\u2192 ghi t\xe0i nguy\xean|                                             | OS.get_cmdline_args()  \u2192 tham s\u1ed1 CLI|\r\n|                                            |                                                        | OS.read_string_from_stdin() \u2192 nh\u1eadp|\r\n|                                            |                                                        | OS.get_clipboard()     \u2192 clipboard|\r\n|                                            |                                                        | OS.has_clipboard()     \u2192 c\xf3 clipboard?|\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [OS - FEATURES & PLATFORM] N\u1ec0N T\u1ea2NG         | [OS - TOUCH & TTS] C\u1ea2M \u1ee8NG & TEXT-TO-SPEECH           | [OS - ADVANCED] N\xc2NG CAO (macOS/Android)|\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| OS.has_feature("standalone") \u2192 t\xednh n\u0103ng?  | OS.has_touchscreen_ui_hint() \u2192 c\xf3 c\u1ea3m \u1ee9ng?            | OS.keep_screen_on = true \u2192 gi\u1eef s\xe1ng|\r\n| OS.is_debug_build()        \u2192 build debug?  | OS.show_virtual_keyboard()   \u2192 hi\u1ec7n b\xe0n ph\xedm \u1ea3o      | OS.get_display_cutouts() \u2192 cutouts|\r\n| OS.is_stdout_verbose()     \u2192 verbose mode? | OS.hide_virtual_keyboard()   \u2192 \u1ea9n b\xe0n ph\xedm \u1ea3o        | OS.set_native_icon("icon.ico")    |\r\n|                                            | OS.get_virtual_keyboard_height() \u2192 chi\u1ec1u cao         |  \u2192 \u0111\u1eb7t icon g\u1ed1c (Windows/macOS)   |\r\n|                                            | OS.tts_speak("text", "voice")\u2192 \u0111\u1ecdc v\u0103n b\u1ea3n            | OS.get_native_handle(HANDLE_WINDOW)|\r\n|                                            | OS.tts_pause() / resume() / stop()                    |  \u2192 handle n\u1ed9i b\u1ed9 (GDNative)       |\r\n|                                            | OS.tts_is_speaking() \u2192 \u0111ang \u0111\u1ecdc?                     | OS.global_menu_add_item("_dock",..)|\r\n|                                            | OS.tts_get_voices() \u2192 danh s\xe1ch gi\u1ecdng                |  \u2192 menu macOS                     |\r\n|                                            | OS.tts_set_utterance_callback(...) \u2192 callback        |                                   |\r\n|                                            | OS.native_video_play("vid.mp4") \u2192 ph\xe1t video native   |                                   |\r\n|                                            | OS.native_video_pause() / stop()                     |                                   |\r\n|                                            | OS.get_connected_midi_inputs() \u2192 thi\u1ebft b\u1ecb MIDI       |                                   |\r\n|                                            | OS.open_midi_inputs() / close_midi_inputs()          |                                   |\r\n|                                            | OS.request_permission("REC") \u2192 quy\u1ec1n Android         |                                   |\r\n|                                            | OS.get_granted_permissions() \u2192 quy\u1ec1n \u0111\xe3 c\u1ea5p          |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| GHI CH\xda:                                                                                                                               |\r\n| \u2022 (debug only): C\xe1c h\xe0m in b\u1ed9 nh\u1edb, t\xe0i nguy\xean ch\u1ec9 ho\u1ea1t \u0111\u1ed9ng trong build debug.                                                         |\r\n| \u2022 user:// l\xe0 \u0111\u01b0\u1eddng d\u1eabn \u1ea3o, tr\u1ecf \u0111\u1ebfn th\u01b0 m\u1ee5c d\u1eef li\u1ec7u ng\u01b0\u1eddi d\xf9ng.                                                                        |\r\n| \u2022 OS.execute() c\u1ea7n `blocking=true` \u0111\u1ec3 l\u1ea5y output.                                                                                      |\r\n| \u2022 M\u1ed9t s\u1ed1 h\xe0m ch\u1ec9 ho\u1ea1t \u0111\u1ed9ng tr\xean n\u1ec1n t\u1ea3ng c\u1ee5 th\u1ec3 (Android, macOS, desktop).                                                             |\r\n| \u2022 TTS v\xe0 b\xe0n ph\xedm \u1ea3o ch\u1ee7 y\u1ebfu h\u1ed7 tr\u1ee3 mobile & desktop (t\xf9y H\u0110H).                                                                        |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\n'})})}function S(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>_});var r=t(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function _(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);