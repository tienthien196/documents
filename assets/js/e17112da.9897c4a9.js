"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4645],{1767:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"GDdocs/net/enet","title":"enet","description":"","source":"@site/docs/GDdocs/net/enet.md","sourceDirName":"GDdocs/net","slug":"/GDdocs/net/enet","permalink":"/ecosys.documents/docs/GDdocs/net/enet","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"inputevent","permalink":"/ecosys.documents/docs/GDdocs/input/inputevent"},"next":{"title":"ip","permalink":"/ecosys.documents/docs/GDdocs/net/ip"}}');var i=n(4848),s=n(8453);const o={},c=void 0,a={},p=[];function d(e){const t={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'+----------------------------------------------------------------------------------------------------------------------------------------+\r\n|                                    GODOT MULTIPLAYER & NETWORKED PEER CHEATSHEET (v4.5 beta)                                            |\r\n|                             Thi\u1ebft l\u1eadp multiplayer, ENet, DTLS, RPC, k\xeanh, relay \u2013 Game m\u1ea1ng to\xe0n di\u1ec7n                                  |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\r\n| [MULTIPLAYERAPI] QU\u1ea2N L\xdd \u0110A NG\u01af\u1edcI CH\u01a0I      | [ENET - CORE] C\u1ea4U H\xccNH C\u01a0 B\u1ea2N                            | [ENET - SECURITY] B\u1ea2O M\u1eacT DTLS    |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| set_custom_multiplayer(api) \u2192 d\xf9ng API t\xf9y ch\u1ec9nh| peer.create_server(port, max) \u2192 t\u1ea1o server         | set_dtls_enabled(true) \u2192 b\u1eadt DTLS |\r\n| api.set_root_node(node)    \u2192 thi\u1ebft l\u1eadp g\u1ed1c  | peer.create_client(ip, port) \u2192 t\u1ea1o client             | set_dtls_verify_enabled(true) \u2192 x\xe1c th\u1ef1c|\r\n| api.is_network_server()    \u2192 ki\u1ec3m tra server| peer.set_transfer_mode(mode) \u2192 ch\u1ebf \u0111\u1ed9 truy\u1ec1n         | set_dtls_hostname("host") \u2192 host  |\r\n| api.get_network_unique_id()\u2192 l\u1ea5y ID        | peer.set_refuse_new_connections(true) \u2192 t\u1eeb ch\u1ed1i      | set_dtls_key(key) \u2192 kh\xf3a DTLS     |\r\n| api.get_network_connected_peers()\u2192 danh s\xe1ch| peer.set_transfer_channel(1) \u2192 k\xeanh m\u1eb7c \u0111\u1ecbnh         | set_dtls_certificate(cert) \u2192 cert |\r\n| api.send_bytes(data, id)   \u2192 g\u1eedi byte      | peer.get_connection_status() \u2192 tr\u1ea1ng th\xe1i            |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| [ENET - ADVANCED] N\xc2NG CAO                  | [CUSTOM PEER] T\u1ef0 TRI\u1ec2N KHAI                            | [RPC & SIGNALS] GIAO TI\u1ebeP         |\r\n|--------------------------------------------|--------------------------------------------------------|-----------------------------------|\r\n| set_always_ordered(true)   \u2192 lu\xf4n gi\u1eef th\u1ee9 t\u1ef1| NetworkedMultiplayerCustom.new() \u2192 t\u1ea1o peer t\xf9y ch\u1ec9nh| rpc("func", args) \u2192 g\u1ecdi RPC       |\r\n| set_channel_count(4)       \u2192 4 k\xeanh d\u1eef li\u1ec7u| peer.initialize(id) \u2192 kh\u1edfi t\u1ea1o peer                  | rpc_id(id, "f", a) \u2192 RPC t\u1edbi ID   |\r\n| set_compression_mode(ZSTD) \u2192 n\xe9n d\u1eef li\u1ec7u   | peer.deliver_packet(data, from_id) \u2192 nh\u1eadn g\xf3i tin    | remote func f() \u2192 ch\u1ea1y \u1edf peer kh\xe1c|\r\n| set_server_relay_enabled(true)\u2192 relay server| peer.packet_generated \u2192 t\xedn hi\u1ec7u khi g\u1eedi            | rset("prop", val) \u2192 \u0111\u1ed3ng b\u1ed9 thu\u1ed9c t\xednh|\r\n| set_bind_ip("127.0.0.1")   \u2192 IP bind server| peer.set_max_packet_size(65536) \u2192 k\xedch th\u01b0\u1edbc g\xf3i     | rset_id(id, "p", v) \u2192 RSET t\u1edbi ID |\r\n| set_peer_timeout(id, t, i, a)\u2192 timeout peer|                                                        |                                   |\r\n| get_peer_address(id)       \u2192 IP peer       |                                                        |                                   |\r\n| get_peer_port(id)          \u2192 c\u1ed5ng peer     |                                                        |                                   |\r\n+--------------------------------------------+--------------------------------------------------------+-----------------------------------+\r\n| GHI CH\xda:                                                                                                                               |\r\n| \u2022 \ud83d\udd04 Lu\xf4n g\u1ecdi get_tree().network_peer = peer sau khi t\u1ea1o \u2013 \u0111\u1ec3 k\xedch ho\u1ea1t h\u1ec7 th\u1ed1ng multiplayer.                                            |\r\n| \u2022 \ud83d\udd10 DTLS y\xeau c\u1ea7u kh\xf3a (CryptoKey) v\xe0 ch\u1ee9ng ch\u1ec9 (X509Certificate) \u2013 d\xf9ng generate_self_signed_certificate() \u0111\u1ec3 test.                    |\r\n| \u2022 \ud83d\udce1 K\xeanh (channel) cho ph\xe9p g\u1eedi d\u1eef li\u1ec7u v\u1edbi \u0111\u1ed9 \u01b0u ti\xean kh\xe1c nhau \u2013 v\xed d\u1ee5: k\xeanh 0: reliable, k\xeanh 1: unordered.                           |\r\n| \u2022 \ud83d\udce6 compression_mode = COMPRESS_ZSTD gi\xfap gi\u1ea3m b\u0103ng th\xf4ng \u2013 r\u1ea5t h\u1eefu \xedch cho game online.                                               |\r\n| \u2022 \ud83d\udd04 set_server_relay_enabled(true) cho ph\xe9p server chuy\u1ec3n ti\u1ebfp d\u1eef li\u1ec7u gi\u1eefa c\xe1c client \u2013 c\u1ea7n \u0111\u1ec3 l\xe0m relay server.                      |\r\n| \u2022 \ud83e\udde9 NetworkedMultiplayerCustom l\xfd t\u01b0\u1edfng \u0111\u1ec3 t\xedch h\u1ee3p v\u1edbi WebSocket, WebRTC, ho\u1eb7c custom network protocol.                                |\r\n| \u2022 \ud83d\udce3 RPC/RSET ch\u1ec9 ho\u1ea1t \u0111\u1ed9ng n\u1ebfu node c\xf3 MultiplayerSynchronizer ho\u1eb7c \u0111\u01b0\u1ee3c qu\u1ea3n l\xfd b\u1edfi MultiplayerSpawner.                                |\r\n+----------------------------------------------------------------------------------------------------------------------------------------+\n'})})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(6540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);